name: Loop-Unrolling-Benchmark (CMake • multi-platform)

on:
  push:
    branches: [ "main" ]
    paths:
      - 'optimizations/fragmentation_cache_efficiency/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'optimizations/fragmentation_cache_efficiency/**'


jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          #── Windows / MSVC
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          #── Ubuntu / GCC
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          #── Ubuntu / Clang
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          # GCC/Clang are not pre-installed on windows-latest runner
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          # MSVC not on ubuntu-latest
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    # ───────────── checkout ────────────────────────────────────────────────
    - name: Checkout repo
      uses: actions/checkout@v4

    # ───────────── configure ─────────────────────────────────────────────
    - name: Configure CMake
      run: >
        cmake -B build
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S fragmentation_cache_efficiency

    # ───────────── build ─────────────────────────────────────────────────
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    # ───────────── run benchmark ─────────────────────────────────────────
    - name: Run benchmark
      working-directory: build
      shell: bash
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          ./Release/fragmentation.exe
        else
          ./fragmentation
        fi
